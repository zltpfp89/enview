# When describing URL, you shoud finish it with the '/' character.
# c2s: /login
# s2s: /simpleValidate, /serviceValidate, /proxy
enpass.server.url.c2s=http://localhost:9080/enpass/
enpass.server.url.s2s=http://localhost:9080/enpass/

enpass.client.loginFormClient=true
enpass.client.metaDataNameList=nmKor
enpass.client.mask.file=/enpass-client.masks

# Set the Client application's session attribute name and value using when deciding
# whether independent authentication of Client application is performed or not.  
client.app.authKey=login
client.app.authVal=Y

enpass.client.oneTimeAuth=true
client.app.exist.contextPath=true
client.app.portal.only=false

# If a already integrated account is not provided,
# for getting this client application's own user Id, 'appId' should be specified.
#enpass.client.appId=Common

# If only you set this value to 'false', checker will not live.
#healthyChecker.use=false
# How long after the application is started before health checker start at first.
# and How often the checker should be run.
#healthyChecker.delay.millisecond=1000
#healthyChecker.period.millisecond=60000
#healthyChecker.forward.url=/jsp/allServerGone.jsp

# Set whether this Client App. plays as a IdP or not. When only IdP, "true" should be set.
client.app.IdP.role=true
# The symetric encryption key which is used to encrypt user information.
enpass.client.IdP.key=123456789012345678901234

# For HttpClient
# true/false
httpClientParams.strict=
# true/false
httpClientParams.authenticationPreemptive=
httpClientParams.contentCharset=
httpClientParams.connectionManagerTimeout=
httpClientParams.cookiePolicy=
httpClientParams.credentialCharset=
httpClientParams.httpElementCharset=
httpClientParams.soTimeout=
# HTTP_0_9/HTTP_1_0/HTTP_1_1
httpClientParams.version=
httpConnectionManagerParams.defaultMaxConnectionsPerHost=
httpConnectionManagerParams.maxTotalConnections=
httpConnectionManagerParams.connectionTimeout=
# true/false
httpClient.strictHostNameCheck=
