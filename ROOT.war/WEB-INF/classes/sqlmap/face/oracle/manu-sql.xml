<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
    
<sqlMap namespace="schedule">
    <typeAlias alias="mdVO" type="com.saltware.enface.manu.vo.MdVO"/>

	<resultMap class="mdVO" id="manu.selectMdListMap">
		<result property="mdId"			column="MD_ID"/>
		<result property="mdNm"			column="MD_NM"/>
		<result property="crUsr"		column="CR_USR"/>
		<result property="crDt"			column="CR_DT"/>
		<result property="udtUsr"		column="UDT_USR"/>
		<result property="udtDt"		column="UDT_DT"/>
		<result property="udtUsrNm"		column="UDT_USR_NM"/>
	</resultMap>    
    
    <!-- 모듈목록 -->
    <select id="manu.selectMdList" resultMap="manu.selectMdListMap" >
        /* manu.selectMdList 모듈목록조회*/
        SELECT MD_ID, MD_NM, CR_USR, CR_DT, NVL(UDT_USR,CR_USR) UDT_USR, NVL( UDT_DT, CR_DT) UDT_DT, NM_KOR UDT_USR_NM 
        FROM MN_MD a
        JOIN USERPASS b ON NVL(UDT_USR,CR_USR) = b.USER_ID
        ORDER BY 2
    </select>
    
    <!-- 모듈목록 -->
    <select id="manu.selectMd" resultMap="manu.selectMdListMap" >
        /* manu.selectMdList 모듈목록조회*/
        SELECT MD_ID, MD_NM, CR_USR, CR_DT, NVL(UDT_USR,CR_USR) UDT_USR, NVL( UDT_DT, CR_DT) UDT_DT, NM_KOR UDT_USR_NM  
        FROM MN_MD a
        JOIN USERPASS b ON NVL(UDT_USR,CR_USR) = b.USER_ID
        WHERE a.MD_ID=#mdId#
        AND ROWNUM <![CDATA[<]]> 2
        ORDER BY 2
    </select>

    <update id="manu.insertMd" >
        /* manu.insertMd 모듈추가 */
        INSERT INTO MN_MD 
        	( MD_ID, MD_NM, CR_USR, CR_DT, UDT_USR, UDT_DT )
        VALUES
			( #mdId#, #mdNm#, #udtUsr#, SYSTIMESTAMP, #udtUsr#, SYSTIMESTAMP)
    </update>
    
    <update id="manu.updateMd" >
        /* manu.updateMd 모듈 수정*/
        UPDATE MN_MD 
        SET MD_NM = #mdNm#, UDT_USR = #udtUsr#, UDT_DT = SYSTIMESTAMP
		WHERE  MD_ID = #mdId#
    </update>
    
    <delete id="manu.deleteMd" >
        /* manu.updateMd 모듈 수정 */
        DELETE FROM MN_MD 
		WHERE  MD_ID = #mdId#
    </delete>

    <typeAlias alias="tocVO" type="com.saltware.enface.manu.vo.TocVO"/>

	<resultMap class="tocVO" id="manu.selectTocMenuListMap">
		<result property="mdId"		column="MD_ID"/>
		<result property="mdNm"		column="MD_NM"/>
		<result property="tocId"	column="TOC_ID"/>
		<result property="upTocId"	column="UP_TOC_ID"/>
		<result property="subj"		column="SUBJ"/>
	</resultMap>    
    
    <!-- 모듈목록 -->
    <select id="manu.selectTocTree" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap">
	    /* manu.selectTocTree 목차메뉴목록 */
	    SELECT * FROM (
			SELECT  0 AS LEV, ROW_NUMBER() OVER( ORDER BY MD_NM) SEQ,  MD_ID ID , '##' AS PARENT, MD_NM TEXT, MD_ID, MD_NM, 'Y' AS CTGY_YN 
			FROM MN_MD
			UNION
			SELECT LEV, SEQ, TOC_ID ID, CASE WHEN LEV=1 THEN a.MD_ID ELSE UP_TOC_ID END PARENT, SUBSTR( NO, 2, 100) ||  '. ' || SUBJ TEXT, a.MD_ID, b.MD_NM, A.CTGY_YN
			FROM ( 
				SELECT LEVEL LEV, SEQ, SYS_CONNECT_BY_PATH(SEQ, '.') NO, TOC_ID, UP_TOC_ID, MD_ID, SUBJ,CTGY_YN  
				FROM MN_TOC
				<isNotEmpty property="mdId">
				WHERE MD_ID=#mdId#
				</isNotEmpty>
				START WITH UP_TOC_ID='0000'  
				CONNECT BY PRIOR TOC_ID = UP_TOC_ID
			) a
			JOIN MN_MD b ON a.MD_ID = b.MD_ID
		)
		WHERE 1= 1
		<isNotEmpty property="mdId">
		AND MD_ID=#mdId#
		</isNotEmpty>
		<isNotEmpty property="tocId">
		AND MD_ID  IN (
			SELECT DISTINCT MD_ID 
			FROM MN_TOC a
			WHERE TOC_ID=#tocId#
		)
		</isNotEmpty>
		<isNotEmpty property="searchKey">
		AND MD_ID  IN (
			SELECT DISTINCT MD_ID 
			FROM MN_TOC a
			WHERE a.SUBJ LIKE '%' || #searchKey# || '%' OR a.CONTENTS LIKE '%' || #searchKey# || '%'
		)
		</isNotEmpty>
		ORDER BY SEQ ASC
    </select>

	<resultMap class="tocVO" id="manu.selectTocListMap">
		<result property="tocId"	column="TOC_ID"/>
		<result property="mdId"	column="MD_ID"/>
		<result property="mdNm"	column="MD_NM"/>
		<result property="subj"	column="SUBJ"/>
		<result property="readCnt"	column="READ_CNT"/>
		<result property="tocCrUsr"	column="TOC_CR_USR"/>
	</resultMap>
	    
    <select id="manu.selectTocList" resultMap="manu.selectTocListMap">
	    /* manu.selectTocList 목차목록 */
		<isNotEmpty property="searchKey">
			SELECT TOC_ID, MD_ID, MD_NM, SUBJ, READ_CNT ,TOC_CR_USR
			FROM (
				SELECT a.TOC_ID, a.MD_ID,b.MD_NM, <!-- F_GET_TOC_IDX(a.TOC_ID)  -->a.TOC_ID || '. ' || a.SUBJ SUBJ, a.READ_CNT, a.TOC_CR_USR, ROW_NUMBER() OVER (ORDER BY b.MD_NM, a.TOC_LEVEL, a.SEQ) RNUM 
				FROM MN_TOC a
				JOIN MN_MD b ON a.MD_ID = b.MD_ID
				WHERE 1=1 
				<isNotEmpty property="mdId">
				AND a.MD_ID=#mdId#
				<!-- AND a.TOC_LEVEL=1  -->
				</isNotEmpty>
				<isNotEmpty property="upTocId">
				AND a.UP_TOC_ID=#upTocId#
				</isNotEmpty>
				<isNotEmpty property="ctgyYn">
				AND a.CTGY_YN=#ctgyYn#
				</isNotEmpty>
				AND ( a.SUBJ LIKE '%' || #searchKey# || '%' OR a.CONTENTS LIKE '%' || #searchKey# || '%')
			)
			WHERE 1=1
			 AND RNUM BETWEEN #startRow# AND #endRow#    
		</isNotEmpty>
		<isEmpty property="searchKey">
			SELECT * FROM (
			SELECT a.TOC_ID, a.MD_ID, b.MD_NM, <!-- F_GET_TOC_IDX(a.TOC_ID)  -->a.TOC_ID || '. ' || a.SUBJ SUBJ, a.READ_CNT , a.TOC_CR_USR
			,ROW_NUMBER() OVER (ORDER BY b.MD_NM, a.TOC_LEVEL, a.SEQ) RNUM
			FROM MN_TOC a
			JOIN MN_MD b ON a.MD_ID = b.MD_ID
			WHERE 1=1 
			<isNotEmpty property="mdId"> 
			AND a.MD_ID=#mdId#
			<!-- AND a.TOC_LEVEL=1  -->
			</isNotEmpty>
			<isNotEmpty property="upTocId">
			AND a.UP_TOC_ID=#upTocId#
			</isNotEmpty>
			<isNotEmpty property="ctgyYn">
			AND a.CTGY_YN=#ctgyYn#
			</isNotEmpty>
			<!-- ORDER BY SEQ  -->
			) WHERE 1=1
			<isNotEmpty property="isMobile">
				AND RNUM BETWEEN #startRow# AND #endRow#
			</isNotEmpty>   
		</isEmpty>			
	</select>
	
    <select id="manu.newSelectTocList" resultMap="manu.selectTocListMap">
	    /* manu.selectTocList 목차목록 */
		<isNotEmpty property="searchKey">
			SELECT TOC_ID, MD_ID, MD_NM, SUBJ, READ_CNT ,TOC_CR_USR
			FROM (
				SELECT a.TOC_ID, a.MD_ID,b.MD_NM, <!-- F_GET_TOC_IDX(a.TOC_ID)  -->a.TOC_ID || '. ' || a.SUBJ SUBJ, a.READ_CNT, a.TOC_CR_USR, ROW_NUMBER() OVER (ORDER BY b.MD_NM, a.TOC_LEVEL, a.SEQ) RNUM 
				FROM MN_TOC a
				JOIN MN_MD b ON a.MD_ID = b.MD_ID
				WHERE 1=1 
				<isNotEmpty property="mdId">
				AND a.MD_ID=#mdId#
				<!-- AND a.TOC_LEVEL=1  -->
				</isNotEmpty>
				<isNotEmpty property="upTocId">
				AND a.UP_TOC_ID=#upTocId#
				</isNotEmpty>
				AND a.CTGY_YN='N'
				AND ( a.SUBJ LIKE '%' || #searchKey# || '%' OR a.CONTENTS LIKE '%' || #searchKey# || '%')
			)
			WHERE 1=1
			 AND RNUM BETWEEN #startRow# AND #endRow#    
		</isNotEmpty>
		<isEmpty property="searchKey">
			SELECT * FROM (
			SELECT a.TOC_ID, a.MD_ID, b.MD_NM, <!-- F_GET_TOC_IDX(a.TOC_ID)  -->a.TOC_ID || '. ' || a.SUBJ SUBJ, a.READ_CNT, a.TOC_CR_USR
			,ROW_NUMBER() OVER (ORDER BY b.MD_NM, a.TOC_LEVEL, a.SEQ) RNUM
			FROM MN_TOC a
			JOIN MN_MD b ON a.MD_ID = b.MD_ID
			WHERE 1=1 
			<isNotEmpty property="mdId">
			AND a.MD_ID=#mdId#
			<!-- AND a.TOC_LEVEL=1  -->
			</isNotEmpty>
			<isNotEmpty property="upTocId">
			AND a.UP_TOC_ID=#upTocId#
			</isNotEmpty>
			AND a.CTGY_YN='N'
			<!-- ORDER BY SEQ  -->
			) WHERE 1=1
			<isNotEmpty property="isMobile">
				AND RNUM BETWEEN #startRow# AND #endRow#
			</isNotEmpty>   
		</isEmpty>			
	</select>	
	
    <select id="manu.selectTocCount" resultClass="java.lang.Integer">
	    /* manu.selectTocCount 목차수 */
		SELECT COUNT(*) 
		FROM MN_TOC a
		JOIN MN_MD b ON a.MD_ID = b.MD_ID
		WHERE 1=1 
		AND ( a.SUBJ LIKE '%' || #searchKey# || '%' OR a.CONTENTS LIKE '%' || #searchKey# || '%')
		<isNotEmpty property="mdId">
		AND a.MD_ID=#mdId#
		</isNotEmpty>
	</select>
	
	   <select id="manu.newSelectTocCount" resultClass="java.lang.Integer">
	    /* manu.selectTocCount 목차수 */
		SELECT COUNT(*) 
		FROM MN_TOC a
		JOIN MN_MD b ON a.MD_ID = b.MD_ID
		WHERE 1=1 
		AND ( a.SUBJ LIKE '%' || #searchKey# || '%' OR a.CONTENTS LIKE '%' || #searchKey# || '%')
		<isNotEmpty property="mdId">
		AND a.MD_ID=#mdId#
		</isNotEmpty>
		AND a.CTGY_YN='N'
	</select>
	
	
	
    <select id="manu.selectSubTocCount" resultClass="java.lang.Integer">
	    /* manu.selectSubTocCount 하위목차수(자신포함) */
	    SELECT COUNT(*) 
	    FROM (
			SELECT TOC_ID
			FROM MN_TOC
			START WITH TOC_ID=#tocId#
			CONNECT BY PRIOR TOC_ID = UP_TOC_ID
		)
	</select>
	
    <select id="manu.selectSubTocList" resultClass="java.lang.String">
	    /* manu.selectSubTocList 하위목차목록(자신포함) */
	    SELECT COUNT(*) 
	    FROM (
			SELECT TOC_ID
			FROM MN_TOC
			START WITH TOC_ID=#tocId#
			CONNECT BY PRIOR TOC_ID = UP_TOC_ID
		)
	</select>

    
	<resultMap class="tocVO" id="manu.selectTocMap">
		<result property="tocId"	column="TOC_ID"/>
		<result property="upTocId"	column="UP_TOC_ID"/>
		<result property="mdId"	column="MD_ID"/>
		<result property="tocLevel"	column="TOC_LEVEL"/>
		<result property="seq"	column="SEQ"/>
		<result property="subj"	column="SUBJ"/>
		<result property="contents"	column="CONTENTS" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="tocCrUsr"	column="TOC_CR_USR"/>
		<result property="tocCrDt"	column="TOC_CR_DT"/>
		<result property="tocUdtUsr"	column="TOC_UDT_USR"/>
		<result property="tocUdtDt"	column="TOC_UDT_DT"/>
		<result property="readCnt"	column="READ_CNT"/>
		<result property="contentsT"	column="CONTENTS_T"/>    
	</resultMap>
	    
    <select id="manu.selectToc" resultMap="manu.selectTocMap">
	    /* manu.selectToc 목차 */
		SELECT  TOC_ID, UP_TOC_ID, MD_ID, TOC_LEVEL, SEQ, 
			SUBJ, CONTENTS, TOC_CR_USR, TOC_CR_DT, TOC_UDT_USR, 
			TOC_UDT_DT, READ_CNT, CONTENTS_T
		FROM MN_TOC
		WHERE TOC_ID=#tocId# 
    </select>

    <select id="manu.selectNewTocId" resultClass="java.lang.String">
	    /* manu.selectNewTocId */
		SELECT SUBSTR( '0000', 1, 4 - LENGTH( TOC_ID)) ||   TOC_ID 
		FROM (
		  SELECT TO_CHAR(NVL(MAX( TOC_ID), '0') + 1)   TOC_ID FROM MN_TOC
		)
    </select>
    
    <update id="manu.insertToc">
    /* manu.insertToc */
	INSERT INTO MN_TOC (
		TOC_ID, UP_TOC_ID, MD_ID, TOC_LEVEL, SEQ, 
		SUBJ, CONTENTS, TOC_CR_USR, TOC_CR_DT, TOC_UDT_USR, 
		TOC_UDT_DT, READ_CNT , CTGY_YN
	) VALUES (
		#tocId#, #upTocId#, #mdId#, #tocLevel#, 
		( SELECT NVL(MAX( SEQ), 0) + 1 FROM MN_TOC WHERE MD_ID = #mdId# AND UP_TOC_ID=#upTocId#), 
		#subj#, #contents#, #tocUdtUsr#, SYSTIMESTAMP, #tocUdtUsr#, 
		SYSTIMESTAMP, 0, #ctgyYn#
	) 
    </update>

    <update id="manu.updateToc">
    /* manu.updateToc */
    UPDATE MN_TOC SET
		SUBJ = #subj#, CONTENTS = #contents#, TOC_UDT_USR = #tocUdtUsr#, TOC_UDT_DT = SYSTIMESTAMP, CTGY_YN = #ctgyYn#
	WHERE TOC_ID = #tocId# 
    </update>
    
    <update id="manu.updateTocForRead">
    /* manu.updateToc */
    UPDATE MN_TOC SET
		READ_CNT = READ_CNT + 1
	WHERE TOC_ID = #tocId# 
    </update>
    
    <update id="manu.updateTocForMove">
    /* manu.updateToc */
    UPDATE MN_TOC SET
		MD_ID = #mdId#, 
        UP_TOC_ID=#upTocId#, 
        SEQ= CASE WHEN #seq# = 0 THEN (SELECT NVL(MAX(SEQ), 0) + 1 FROM MN_TOC WHERE MD_ID=#mdId# AND UP_TOC_ID=#upTocId#)  
        ELSE #seq# 
        END, 
        TOC_LEVEL = CASE WHEN #moveType# = 'E' AND #srcId# = '0000' THEN 1
         WHEN #moveType# = 'S' AND #upTocId# = '0000' THEN 1
         WHEN #moveType# = 'E' THEN (SELECT NVL(MAX(TOC_LEVEL), 1) FROM MN_TOC WHERE MD_ID = #mdId# AND TOC_ID = #srcId#)
         ELSE (SELECT NVL(MAX(TOC_LEVEL), 1) + 1 FROM MN_TOC WHERE MD_ID = #mdId# AND TOC_ID = #upTocId#)
         END
	WHERE TOC_ID = #tocId# 
    </update>
    
    <update id="manu.deleteToc">
    /* manu.deleteToc */
    DELETE FROM MN_TOC
	WHERE TOC_ID = #tocId# 
    </update>
    
    <update id="manu.moveToc">
    /* manu.moveToc */
    UPDATE MN_TOC SET
		UP_TOC_ID = #upTocId#, SEQ= #seq#
	WHERE TOC_ID = #tocId# 
    </update>
    
    <update id="manu.decreaseTocSeq">
    /* manu.decreaseTocSeq */
    UPDATE MN_TOC SET
		SEQ = SEQ - 1
	WHERE MD_ID = #mdId#
	AND UP_TOC_ID = #upTocId#
	AND SEQ &gt; #seq#
    </update>

    <update id="manu.increaseTocSeq">
    /* manu.increaseTocSeq */
    UPDATE MN_TOC SET
		SEQ = SEQ + 1
	WHERE MD_ID = #mdId#
	AND UP_TOC_ID = #upTocId#
	AND SEQ &gt;= #seq#
    </update>

    
    <select id="manu.selectBfList" resultClass="com.saltware.enview.util.EnviewMap">
	    /* manu.selectBfList 선행작업조회 */
		SELECT b.TOC_ID, b.SUBJ, c.MD_NM
		FROM MN_BFAF a
		JOIN MN_TOC b ON a.BF_TOC_ID = b.TOC_ID
		JOIN MN_MD c ON b.MD_ID = c.MD_ID
		WHERE AF_TOC_ID = #tocId#
    </select>
    
    <select id="manu.selectAfList" resultClass="com.saltware.enview.util.EnviewMap">
	    /* manu.selectAfList 후행작업조회 */
		SELECT b.TOC_ID, b.SUBJ, c.MD_NM
		FROM MN_BFAF a
		JOIN MN_TOC b ON a.AF_TOC_ID = b.TOC_ID
		JOIN MN_MD c ON b.MD_ID = c.MD_ID
		WHERE BF_TOC_ID = #tocId#
    </select>

    <update id="manu.insertBfAf">
    /* manu.insertBfAf */
	INSERT INTO MN_BFAF (
		AF_TOC_ID, BF_TOC_ID 
	) VALUES(
		#afTocId#, #bfTocId#
	)
    </update>

    <delete id="manu.deleteBfAfList">
    /* manu.deleteBfAfList */
	DELETE FROM MN_BFAF
	WHERE AF_TOC_ID = #tocId# OR BF_TOC_ID=#tocId#
    </delete>

    <select id="manu.selectCmdList" resultClass="com.saltware.enview.util.EnviewMap">
	    /* manu.selectCmdList 관련명령조회 */
		SELECT a.T_CD
		FROM MN_CMD a
		WHERE a.TOC_ID = #tocId#
    </select>

    
    <update id="manu.insertCmd">
    /* manu.insertCmd */
	INSERT INTO MN_CMD (
		TOC_ID, T_CD 
	) VALUES(
		#tocId#, #tCd#
	)
    </update>

    <update id="manu.deleteCmdList">
    /* manu.deleteCmdList */
	DELETE FROM MN_CMD 
	WHERE TOC_ID = #tocId#
    </update>
    
    <typeAlias alias="fileVO" type="com.saltware.enface.sjpb.Z.service.SjpbFileVO"/>
	
	<resultMap class="fileVO" id="manu.selectFileListMap">
		<result property="fileId"				column="FILE_ID"/>
		<result property="fileNm"				column="FILE_NM"/>
		<result property="fileMask"				column="FILE_MASK"/>
		<result property="fileSize"				column="FILE_SIZE"/>
		<result property="fileType"				column="FILE_TYPE"/>
		<result property="filePath"				column="FILE_PATH"/>
		<result property="fileCtype"			column="FILE_CTYPE"/>
	</resultMap>    
	
    <!-- 목차 첨부파일 조회 -->
    <select id="manu.selectFileList" resultMap="manu.selectFileListMap" >
    /* md.selectFileList 도움말 첨부파일 조회*/
	SELECT A.FILE_ID,FILE_NM,FILE_MASK,FILE_SIZE,FILE_TYPE,FILE_PATH,FILE_CTYPE
	  FROM SJPB_COMM_FILE A
	  JOIN MN_TOC_FILE B ON  A.FILE_ID = B.FILE_ID 
	  WHERE TOC_ID=#tocId#
    </select>

    <update id="manu.insertTocFile">
    /* manu.insertBfAf */
	INSERT INTO MN_TOC_FILE (
		TOC_ID, FILE_ID 
	) VALUES( 
		#tocId#, #fileId#
	)
    </update>

    <update id="manu.deleteTocFileList">
    /* manu.deleteCmdList */
	DELETE FROM MN_TOC_FILE 
	WHERE TOC_ID = #tocId#
    </update>
    
</sqlMap>

