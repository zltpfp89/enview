<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
	
<sqlMap namespace="face">

	
	
	<!-- Query for [ USER : 사용자 ] Table -->
	
	<select id="user.exist" resultClass="int">
			SELECT COUNT(*) cnt
			FROM SECURITY_PRINCIPAL
			WHERE PRINCIPAL_TYPE='U' AND SHORT_PATH=#userId#
	</select>
	
	<resultMap class="com.saltware.enface.user.service.UserVO" id="UserVO.findUser">
	    <result property="principalId" column="PRINCIPAL_ID"/>
	    <result property="columnValue" column="COLUMN_VALUE"/>
	    <result property="updateRequired" column="UPDATE_REQUIRED"/>
	    <result property="authFailures" column="AUTH_FAILURES"/>
	    <result property="isEnabled" column="IS_ENABLED"/>
	    <result property="principalInfo01" column="PRINCIPAL_INFO01"/>		
	    <result property="principalInfo02" column="PRINCIPAL_INFO02"/>		
	    <result property="principalInfo03" column="PRINCIPAL_INFO03"/>		
	</resultMap>
	<select id="user.findUser" resultMap="UserVO.findUser"> /* user.findUser */
		SELECT a.principal_id, a.column_value, a.update_required, a.auth_failures, b.is_enabled, c.domain_id, b.principal_info01, b.principal_info02, b.principal_info03 
   		FROM SECURITY_CREDENTIAL a, SECURITY_PRINCIPAL b, DOMAIN_PRINCIPAL c
   		WHERE a.PRINCIPAL_ID=b.PRINCIPAL_ID 
   		AND a.PRINCIPAL_ID = c.PRINCIPAL_ID
   		AND b.PRINCIPAL_TYPE='U' AND b.SHORT_PATH=#userId#
   		<isNotEmpty property="domainId">
		AND C.DOMAIN_ID=#domainId#
   		</isNotEmpty>
   		<isEmpty property="domainId">
   		AND ROWNUM = 1
   		</isEmpty>
	</select>
	
	<update id="user.updateAuthFailure"> /* user.updateAuthFailure */
		UPDATE SECURITY_CREDENTIAL 
		SET AUTH_FAILURES=(AUTH_FAILURES+1), MODIFIED_DATE=SYSDATE 
		WHERE PRINCIPAL_ID=(SELECT principal_id FROM security_principal WHERE principal_type='U' AND short_path=#userId#)
	</update>
	
	<update id="user.initAuthFailure"> /* user.initAuthFailure */
		UPDATE SECURITY_CREDENTIAL 
		SET AUTH_FAILURES=0, MODIFIED_DATE=SYSDATE 
		WHERE PRINCIPAL_ID=(SELECT principal_id FROM security_principal WHERE principal_type='U' AND short_path=#userId#)
	</update>
	
	<resultMap class="com.saltware.enface.user.service.UserVO" id="UserVO.detail">
	    <result property="userId" column="USER_ID" />
	    <result property="regNo" column="REG_NO" />
	    <result property="orgCd" column="ORG_CD" />
	    <result property="empNo" column="EMP_NO" />
	    <result property="kindCd" column="KIND_CD" />
	    <result property="typeCd" column="TYPE_CD" />
	    <result property="nmKor" column="NM_KOR" />
	    <result property="nmEng" column="NM_ENG" />
	    <result property="mobileTel" column="MOBILE_TEL" />
	    <result property="emailAddr" column="EMAIL_ADDR" />
	    <result property="userInfo04" column="USER_INFO04" />
	    <result property="langKnd" column="LANG_KND" />
	    <result property="regDatim" column="REG_DATIM" />
	    <result property="homeZip" column="HOME_ZIP" />
	    <result property="homeAddr1" column="HOME_ADDR1" />
	    <result property="homeAddr2" column="HOME_ADDR2" />
	    <result property="lastLogon" column="LAST_LOGON" />
	    <result property="modifyMenu" column="MODIFY_MENU" />
	    <result property="principalId" column="PRINCIPAL_ID" />
	    <result property="principalName" column="PRINCIPAL_NAME" />
	    <result property="authMethod" column="AUth_METHOD" />
	    <result property="defaultPage" column="DEFAULT_PAGE" />
	    <result property="subPage" column="SUB_PAGE" />
	    <result property="theme" column="THEME" />
	    <result property="updateRequired" column="UPDATE_REQUIRED" />
	    <result property="domainId" column="DOMAIN_ID" />
	    <result property="domainNm" column="DOMAIN_Nm" />
	    <result property="userInfo01" column="USER_INFO01"/>
	    <result property="userInfo02" column="USER_INFO02"/>
	    <result property="userInfo03" column="USER_INFO03"/>
	    <result property="userInfo04" column="USER_INFO04"/>
	    <result property="userInfo05" column="USER_INFO05"/>
	    <result property="userInfo06" column="USER_INFO06" />
	    <result property="userInfo07" column="USER_INFO07" />
	    <result property="userInfo08" column="USER_INFO08" />
	    <result property="userInfo09" column="USER_INFO09" />
	    <result property="userInfo10" column="USER_INFO10" />
	    <result property="nmNic" column="NM_NIC" />
	    <result property="orgName" column="ORG_NAME"/>
	    <result property="criMbPosi" column="CRI_MB_POSI"/>	    
	    <result property="criMbPosiNm" column="CRI_MB_POSI_NM"/>	   
	</resultMap>
	
	<select id="user.detail" resultMap="UserVO.detail"> /* user.detail */		
		SELECT A.USER_ID, A.REG_NO, A.ORG_CD, A.EMP_NO, A.KIND_CD, A.TYPE_CD, A.NM_KOR, NVL(A.NM_ENG,'') AS NM_ENG, A.MOBILE_TEL, A.EMAIL_ADDR, 
			   <isNotNull property="lang_knd">#lang_knd# AS LANG_KND, </isNotNull>
  				<isNull property="lang_knd">A.LANG_KND, </isNull>
			   A.REG_DATIM, A.HOME_ZIP, A.HOME_ADDR1, A.HOME_ADDR2, A.LAST_LOGON, D.MODIFY_MENU,
			   B.PRINCIPAL_ID, B.PRINCIPAL_NAME, B.AUTH_METHOD, D.DEFAULT_PAGE, D.SUB_PAGE, D.THEME, 
			   C.UPDATE_REQUIRED, D.DOMAIN_ID, E.DOMAIN_NM,
			   A.USER_INFO01, A.USER_INFO02, A.USER_INFO03, A.USER_INFO04, A.USER_INFO05, 
			   A.USER_INFO06, A.USER_INFO07, A.USER_INFO08, A.USER_INFO09, A.USER_INFO10,
			   A.NM_NIC,
			   (
				SELECT F.CRI_TM_NM AS CRI_TM_NM
				FROM SJPB_CRI_TM F
				WHERE TO_CHAR(F.CRI_TM_ID) = A.ORG_CD
               ) AS ORG_NAME,
               I.CRI_MB_POSI,
               (SELECT CODE_NAME FROM CODEBASE WHERE CODE_ID='SJPB_00020' AND LANG_KND='ko' AND CODE=I.CRI_MB_POSI) AS CRI_MB_POSI_NM
   		FROM USERPASS A 
   		INNER JOIN SECURITY_PRINCIPAL B ON A.USER_ID=B.SHORT_PATH
	  	INNER JOIN SECURITY_CREDENTIAL C ON B.PRINCIPAL_ID=C.PRINCIPAL_ID
	  	INNER JOIN DOMAIN_PRINCIPAL D ON B.PRINCIPAL_ID = D.PRINCIPAL_ID
	  	LEFT OUTER JOIN DOMAIN_LANG E ON E.DOMAIN_ID = D.DOMAIN_ID
	  	LEFT JOIN SJPB_CRI_MB I ON I.CRI_MB_ID = A.USER_ID 
   		WHERE B.PRINCIPAL_TYPE='U' AND A.USER_ID=#userId#
   		<isNotNull prepend=" AND " property="lang_knd">E.LANG_KND = #lang_knd#</isNotNull>
  		<isNull prepend=" AND " property="lang_knd">E.LANG_KND = A.LANG_KND</isNull> 
   		<isNotEmpty property="domainId">
		AND D.DOMAIN_ID=#domainId#
   		</isNotEmpty>
   		<isEmpty property="domainId">
   		AND ROWNUM = 1
   		</isEmpty>   		
	</select>
	
	<select id="user.allowIpInfo" resultClass="String">
	 /* user.allowIpInfo */
		SELECT b.ACES_IP
		FROM   SJPB_CRI_MB b
		WHERE  CRI_MB_ID=#userId#	
	</select>
	
	<select id="user.findGroupRole" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.findGroupRole */
		SELECT principal_id, short_path, parent_id, principal_type, theme, default_page, site_name, principal_name
		FROM security_principal
		WHERE (domain_id=0 or domain_id=#domainId#) AND principal_id in (
			SELECT role_id FROM security_user_role 
		    WHERE user_id =#principal_id#
		    UNION
		    SELECT role_id FROM security_group_role WHERE group_id=(
				SELECT group_id FROM (
					SELECT group_id, ROW_NUMBER() OVER(order by sort_order) rn 
					FROM security_user_group a
					JOIN security_principal b on b.principal_id=a.group_id
					WHERE a.user_id=#principal_id# AND (b.domain_id=0 OR b.domain_id=#domainId#)
				) where rn = 1
			)  
			UNION
			SELECT group_id FROM (
				SELECT group_id, ROW_NUMBER() OVER(order by sort_order) rn 
				FROM security_user_group a
				JOIN security_principal b on b.principal_id=a.group_id
				WHERE a.user_id=#principal_id# AND (b.domain_id=0 OR b.domain_id=#domainId#)
			) where rn = 1
		)
	</select>
	
	<select id="user.findGroup" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.findGroup */
		SELECT principal_id, short_path, parent_id, principal_type, theme, default_page, sub_page, site_name, principal_name, principal_desc, emp_no, org_cd
		, NVL(( SELECT code_name FROM codebase WHERE code_id='200' AND lang_knd='ko' AND code=x.org_cd), org_cd) org_name_ko 
		, NVL(( SELECT code_name FROM codebase WHERE code_id='200' AND lang_knd='en' AND code=x.org_cd), org_cd) org_name_en 
		, NVL(( SELECT code_name FROM codebase WHERE code_id='201' AND lang_knd='ko' AND code=#userId#), #nmKor#) user_name_ko 
		, NVL( NVL(( SELECT code_name FROM codebase WHERE code_id='201' AND lang_knd='en' AND code=#userId#), #nmEng#), #nmKor#) user_name_en 
		, NVL(( SELECT code_name FROM codebase WHERE code_id='202' AND lang_knd='ko' AND code=x.short_path), short_path) group_name_ko 
		, NVL(( SELECT code_name FROM codebase WHERE code_id='202' AND lang_knd='ko' AND code=x.short_path), short_path) group_name_en 
		FROM (
			SELECT principal_id, short_path, parent_id, principal_type, theme, default_page, sub_page, site_name, principal_name, principal_desc, emp_no, org_cd, ROW_NUMBER() OVER( order by sort_order) rn
			FROM security_user_group a
			JOIN security_principal b on b.principal_id=a.group_id AND principal_type='G'
			WHERE a.user_id=#principal_id#
			AND ( b.domain_id=0 OR b.domain_id=#domainId# )
			<isNotNull prepend=" AND " property="group_principal_id">a.group_id=#group_principal_id#</isNotNull>
			<isNotNull prepend=" AND " property="groupId">a.group_id=( SELECT principal_id FROM security_principal WHERE principal_type='G' AND short_path=#groupId#)</isNotNull>
		) x WHERE RN = 1
	</select>
	
	<!-- 그룹체인지 셀렉트 박스 생성 -->
	<select id="user.findGroupList" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.findGroupList */
		 SELECT principal_id, short_path, parent_id, principal_type, theme, default_page, sub_page, site_name, principal_name, principal_desc, (select principal_name from security_principal where principal_id = b.parent_id) as parent_name
         FROM security_user_group a
		 JOIN security_principal b on b.principal_id=a.group_id
		 WHERE a.user_id=#principal_id#
		 AND ( b.domain_id=0 OR b.domain_id=#domainId# )
		 ORDER BY SORT_ORDER
	</select>
	
	<!-- 내가 가진 롤 전부와 첫번째 그룹의 롤 -->
	<select id="user.findRole" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.findRole */
		SELECT principal_id, short_path, parent_id, principal_name
		FROM security_principal
		WHERE (domain_id=0 or domain_id=#domainId#) AND principal_type='R' AND principal_id in (
			SELECT role_id FROM security_user_role 
		    WHERE user_id =#principal_id#
		    UNION
		    SELECT role_id FROM security_group_role WHERE group_id=(
				SELECT group_id FROM (
					SELECT group_id, ROW_NUMBER() OVER(order by sort_order) rn 
					FROM security_user_group a
					JOIN security_principal b on b.principal_id=a.group_id
					WHERE a.user_id=#principal_id# AND (b.domain_id=0 OR b.domain_id=#domainId#)
					<isNotNull prepend=" AND " property="group_principal_id">a.group_id=#group_principal_id#</isNotNull>
				) where rn = 1
			)
		)
	</select>
	
	<resultMap class="com.saltware.enview.admin.role.service.RoleVO" id="user.roleVO">
	    <result property="principalId" column="PRINCIPAL_ID" columnIndex="1"/>
	    <result property="shortPath" column="SHORT_PATH" columnIndex="2"/>
	    <result property="parentId" column="PARENT_ID" columnIndex="3"/>
	    <result property="principalName" column="PRINCIPAL_NAME" columnIndex="4"/>
	</resultMap>
		
	<!-- 내가 가진 롤 전부와 첫번째 그룹의 롤 -->
	<select id="user.findRolesForGroup" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.findRolesForGroup */
		SELECT principal_id, short_path, parent_id, principal_name
		FROM security_principal
		WHERE (domain_id=0 or domain_id=#domainId#) AND principal_type='R' AND principal_id in (
		    SELECT role_id FROM security_group_role WHERE group_id=(
				SELECT group_id FROM (
					SELECT group_id, ROW_NUMBER() OVER(order by sort_order) rn 
					FROM security_user_group a
					JOIN security_principal b on b.principal_id=a.group_id
					WHERE a.user_id=#principal_id# AND (b.domain_id=0 OR b.domain_id=#domainId#)
					<isNotNull prepend=" AND " property="group_principal_id">a.group_id=#group_principal_id#</isNotNull>
				) where rn = 1
			)
		)
	</select>
	
	<!-- 내 첫번째 그룹의 롤 아이디 -->
	<select id="user.findGroupRoleId" resultClass="String"> /* user.findGroupRoleId */
		SELECT role_id 
		  FROM security_group_role 
		 WHERE group_id=
		       (SELECT group_id 
		         FROM 
		              (SELECT group_id, 
		                     ROW_NUMBER() OVER(ORDER BY sort_order) rn 
		                FROM security_user_group a 
		                 JOIN security_principal b 
		                     ON b.principal_id=a.group_id 
		               WHERE a.user_id = #principal_id# 
		               <isNotNull prepend=" AND " property="group_principal_id">a.group_id=#group_principal_id#</isNotNull>
		                     AND 
		                     (
		                         b.domain_id=0 
		                         OR b.domain_id = #domainId#
		                     ) 
		              ) 
		        WHERE rn = 1 
		       )
	</select>
	
	<!-- 내 첫번째 그룹의 롤 아이디들 -->
	<select id="user.findGroupRoleIds" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.findGroupRoleIds */
		SELECT role_id 
		FROM security_group_role 
		WHERE group_id= ( 
			SELECT group_id 
			FROM ( 
				SELECT group_id, ROW_NUMBER() OVER(ORDER BY sort_order) rn 
				FROM security_user_group a 
				JOIN security_principal b ON b.principal_id=a.group_id 
				WHERE a.user_id = #principal_id# 
				<isNotNull prepend=" AND " property="group_principal_id">a.group_id=#group_principal_id#</isNotNull>
				AND ( b.domain_id=0 OR b.domain_id = #domainId# ) 
			) WHERE rn = 1 
		)
	</select>
	
	<select id="user.findParentRole" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.findParentRole */
		SELECT principal_id, short_path, parent_id, principal_name
		FROM security_principal
		WHERE principal_type='R' AND principal_id=#parentId#
	</select>
	
	<select id="user.findParentGroupRole" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.findParentGroupRole */
		SELECT principal_id, short_path, parent_id, principal_type, theme, default_page, site_name, principal_name 
		FROM security_principal
		WHERE principal_id=#parent_id# 
		OR principal_id in ( SELECT role_id FROM security_group_role WHERE group_id=#parent_id# ) 
	</select>
	
	<select id="user.getPermission" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.getPermission */
		SELECT * FROM ( 
			SELECT a.permission_id,a.title,a.res_url,a.res_type,a.action_mask,a.is_allow, '1' AS row_num 
			FROM security_permission a 
			WHERE a.principal_id=$principal_id$ AND a.RES_TYPE IN (0,1,2,3,4)
			<isGreaterEqual prepend=" AND " property="domainId" compareValue="0">(a.DOMAIN_ID = 0 OR a.DOMAIN_ID=#domainId#)</isGreaterEqual>
			<iterate prepend="UNION" property="roleIdList" open="" close="" conjunction="UNION">
			SELECT a.permission_id,a.title,a.res_url,a.res_type,a.action_mask,a.is_allow, '2'||#roleIdList[].index# AS row_num 
	        FROM security_permission a
	        WHERE a.principal_id=#roleIdList[].id# AND a.RES_TYPE IN (0,1,2,3,4)
	        <isGreaterEqual prepend=" AND " property="domainId" compareValue="0">(a.DOMAIN_ID = 0 OR a.DOMAIN_ID=#domainId#)</isGreaterEqual>
			</iterate>
        ) ORDER BY ROW_NUM, RES_TYPE, IS_ALLOW ASC
	</select>
	
	<select id="user.getPermissionForRole" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> 
		/* user.getPermissionForRole */
		SELECT * FROM ( 
			<iterate property="roleIdList" open="" close="" conjunction="UNION">
			SELECT a.permission_id,a.title,a.res_url,a.res_type,a.action_mask,a.is_allow, '2'||#roleIdList[].index# AS row_num 
	        FROM security_permission a
	        WHERE a.principal_id=#roleIdList[].id# AND a.RES_TYPE IN (0,1,2,3,4)
	        <isGreaterEqual prepend=" AND " property="domainId" compareValue="0">(a.DOMAIN_ID = 0 OR a.DOMAIN_ID=#domainId#)</isGreaterEqual>
			</iterate>
        ) ORDER BY ROW_NUM, RES_TYPE, IS_ALLOW ASC
	</select>
	
	<select id="user.getPermission2" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.getPermission2 */
		SELECT a.permission_id,a.title,a.res_url,a.res_type,a.action_mask,a.is_allow, '2'||0 AS row_num 
		FROM security_permission a 
		WHERE a.principal_id=#firstGroupRoleId# AND a.RES_TYPE IN (0,1,2,3,4)
		<isGreaterEqual prepend=" AND " property="domainId" compareValue="0">(a.DOMAIN_ID = 0 OR a.DOMAIN_ID=#domainId#) </isGreaterEqual> 
		ORDER BY ROW_NUM, RES_TYPE, IS_ALLOW ASC
	</select>
	
	<select id="user.getPermission3" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.getPermission3 */
		SELECT * FROM ( 
			SELECT a.permission_id,a.title,a.res_url,a.res_type,a.action_mask,a.is_allow, '1' AS row_num 
			FROM security_permission a 
			WHERE a.principal_id=$principal_id$ AND a.RES_TYPE IN (0,1,2,3,4)
			<isGreaterEqual prepend=" AND " property="domainId" compareValue="0">(a.DOMAIN_ID = 0 OR a.DOMAIN_ID=#domainId#)</isGreaterEqual>
			<iterate prepend="UNION" property="roleIdList" open="" close="" conjunction="UNION">
			SELECT a.permission_id,a.title,a.res_url,a.res_type,a.action_mask,a.is_allow, '2'||#roleIdList[].index# AS row_num 
	        FROM security_permission a
	        WHERE a.principal_id=#roleIdList[].id# AND a.RES_TYPE IN (0,1,2,3,4)
	        <isGreaterEqual prepend=" AND " property="domainId" compareValue="0">(a.DOMAIN_ID = 0 OR a.DOMAIN_ID=#domainId#)</isGreaterEqual>
			</iterate>
        ) ORDER BY ROW_NUM, RES_TYPE, IS_ALLOW ASC
	</select>
	
	<update id="user.changePassword"> /* user.changePassword */
		UPDATE SECURITY_CREDENTIAL SET COLUMN_VALUE=#password#, UPDATE_REQUIRED=1, AUTH_FAILURES=0, MODIFIED_DATE=SYSDATE
   		WHERE PRINCIPAL_ID=(
   			SELECT PRINCIPAL_ID
   			FROM SECURITY_PRINCIPAL
   			WHERE PRINCIPAL_TYPE='U' AND SHORT_PATH=#userId#
   		)
	</update>
	
	<select id="user.detailExtraInfo" resultClass="org.apache.commons.collections.map.CaseInsensitiveMap"> /* user.detailExtraInfo */
		SELECT a.principal_id AS principal_id, b.nm_kor AS userName, b.org_cd AS orgCd, 
			(SELECT short_path FROM SECURITY_PRINCIPAL WHERE principal_id=c.group_id) AS groupId,
			(SELECT principal_name FROM SECURITY_PRINCIPAL WHERE principal_id=c.group_id) AS groupName
   		FROM SECURITY_PRINCIPAL a 
   		INNER JOIN USERPASS b ON a.SHORT_PATH=b.USER_ID
		INNER JOIN SECURITY_USER_GROUP c ON a.PRINCIPAL_ID=c.USER_ID
   		WHERE a.PRINCIPAL_TYPE='U' AND a.SHORT_PATH=#userId# AND c.SORT_ORDER=0
	</select>
	
	<insert id="user.writeLog"> /* user.writeLog */
		INSERT INTO USER_STATISTICS 
			(DOMAIN_ID,IPADDRESS,PRINCIPAL_ID,USER_ID,USER_NAME,ORG_CD,ORG_NAME,TIME_STAMP,STATUS,ELAPSED_TIME,ACCESS_BROWSER) 
		VALUES (#domainId#,#remoteAddress#,#principal_id#,#userId#,#userName#,#orgCd#,#orgName#,SYSDATE,#status#,0,#userAgent#)
	</insert>
	
	<update id="user.updateLastLogin"> /* user.updateLastLogin */
   		UPDATE USERPASS SET LAST_IP=#remoteAddress#, LAST_LOGON=SYSDATE WHERE USER_ID=#userId#
    </update>
    
    <insert id="user.insertSecurityPrincipal"> /* user.insertSecurityPrincipal */
		<![CDATA[
			INSERT INTO SECURITY_PRINCIPAL
				( PRINCIPAL_ID,SHORT_PATH,FULL_PATH,PRINCIPAL_NAME,CLASSNAME,IS_MAPPING_ONLY,IS_ENABLED,AUTH_METHOD, PRINCIPAL_TYPE,CREATION_DATE,MODIFIED_DATE )
			VALUES ( #principalId#, #userId#, '/user/'||#userId#, #nmKor#, 'com.saltware.enview.security.InternalUserPrincipalImpl', 0, 1, 0, 'U', SYSDATE, SYSDATE )
		]]>
	</insert>
	
	<insert id="user.insertSecurityCredential"> /* user.insertSecurityCredential */
		<![CDATA[
			INSERT INTO SECURITY_CREDENTIAL
				( CREDENTIAL_ID,PRINCIPAL_ID,COLUMN_VALUE,CLASSNAME,"TYPE",UPDATE_REQUIRED,IS_ENCODED,IS_ENABLED,AUTH_FAILURES,IS_EXPIRED,CREATION_DATE,MODIFIED_DATE )
			VALUES ( #credentialId#,#principalId#,#columnValue#,'com.saltware.enview.security.spi.impl.DefaultPasswordCredentialImpl',0,1,1,1,0,0,SYSDATE,SYSDATE )
		]]>
	</insert>
	
	<insert id="user.insertUserRole"> /* user.insertUserRole */
		<![CDATA[
			INSERT INTO SECURITY_USER_ROLE (user_id, role_id) VALUES(
	    		#principalId#, 
	    		(SELECT principal_id FROM security_principal WHERE principal_type='R' AND short_path=#roleId#)
	    	)
		]]>
	</insert>

	<insert id="user.insertUserGroup"> /* user.insertUserGroup */
		<![CDATA[
			INSERT INTO SECURITY_USER_GROUP (user_id, group_id, sort_order) VALUES(
	    		#principalId#, 
	    		(SELECT principal_id FROM security_principal WHERE principal_type='G' AND short_path=#groupId#),
	    		#sortOrder#
	    	)
		]]>
	</insert>
	
	<insert id="user.insertSjpbUserGroup"> /* user.insertSjpbUserGroup */
		<![CDATA[
			INSERT INTO SECURITY_USER_GROUP (user_id, group_id, sort_order) VALUES(
	    		(SELECT principal_id FROM security_principal WHERE principal_type='U' AND SHORT_PATH = #userId#), 
	    		(SELECT principal_id FROM security_principal WHERE principal_type='G' AND PRINCIPAL_DESC = #criMbPosi#),
	    		0
	    	)
		]]>
	</insert>	

	<insert id="user.insertSjpbUserGroupDept"> /* user.insertSjpbUserGroupDept */
		<![CDATA[
			INSERT INTO SECURITY_USER_GROUP (user_id, group_id, sort_order) VALUES(
	    		(SELECT principal_id FROM security_principal WHERE principal_type='U' AND SHORT_PATH = #userId#), 
	    		2501,
	    		0
	    	)
		]]>
	</insert>	
	
	<delete id="user.deletetUserRole"> /* user.deleteUserRole */
		<![CDATA[
			DELETE FROM SECURITY_USER_ROLE WHERE user_id = #principalId# 
		]]>
	</delete>
		
	<delete id="user.deleteUserGroup"> /* user.deleteUserGroup */
		<![CDATA[
			DELETE FROM SECURITY_USER_GROUP WHERE user_id = #principalId# 
		]]>
	</delete>
	
	<delete id="user.deleteSjpbUserGroup"> /* user.deleteSjpbUserGroup */
		<![CDATA[
			DELETE FROM SECURITY_USER_GROUP WHERE user_id = (SELECT PRINCIPAL_ID FROM SECURITY_PRINCIPAL WHERE PRINCIPAL_TYPE='U' AND SHORT_PATH =#userId#)
		]]>
	</delete>
	
	
	<insert id="user.insert"> /* user.insert */
		<![CDATA[
			INSERT INTO USERPASS
				( NM_KOR,NM_NIC,USER_ID,GRADE_CD,EMAIL_ADDR,HOME_TEL,MOBILE_TEL,HOME_ZIP,HOME_ADDR1,HOME_ADDR2,BIRTH_YMD,INTRO,SEX_FLAG, USER_INFO04, REG_DATIM, USER_INFO09, USER_INFO08, ORG_CD, REG_NO, USER_INFO10)
			VALUES ( #nmKor#,#nmKor#,#userId#,#gradeCd#,#emailAddr#,#homeTel#,#mobileTel#,#homeZip#,#homeAddr1#,#homeAddr2#,#birthYmd#,#intro#,#sexFlag#,#userInfo04#, SYSDATE, #userInfo09#, #userInfo08#, #orgCd#, #regNo#,#drmPassword#)
		]]>
	</insert>
	
	<insert id="user.insertDomainPrincipal"> /* user.insertDomainPrincipal */
		<![CDATA[
			INSERT INTO DOMAIN_PRINCIPAL
				( DOMAIN_ID, PRINCIPAL_ID, MODIFY_MENU )
			VALUES ( #domainId#,#principalId#,1 )
		]]>
	</insert>

	<insert id="user.insertPushConfig"> /* user.insertPushConfig */
		<![CDATA[
			INSERT INTO PUSH_CONFIG
				( CONFIG_ID,PUSH_NOTICE,RSV_COMMENT,RSV_FRIEND,RSV_GROUP,PUSH_EVENT,PUSH_CHAT )
			VALUES ( #shortPath#,1,1,0,1,1,1 )
		]]>
	</insert>
	
	<update id="user.updateSecurityPrincipal"> /* user.updateSecurityPrincipal */
		<![CDATA[
			UPDATE SECURITY_PRINCIPAL
			SET PRINCIPAL_NAME=#nmKor#
			WHERE 1=1 AND PRINCIPAL_TYPE='U' AND SHORT_PATH=#userId#
		]]>
	</update>
	
	<update id="user.update"> /* user.update */
		<![CDATA[
			UPDATE USERPASS
			SET NM_KOR=#nmKor#,
				NM_NIC=#nmNic#,
				USER_ID=#userId#,
				GRADE_CD=#gradeCd#,
				EMAIL_ADDR=#emailAddr#,
				MOBILE_TEL=#mobileTel#,
				HOME_TEL=#homeTel#,
				HOME_ZIP=#homeZip#,
				HOME_ADDR1=#homeAddr1#,
				HOME_ADDR2=#homeAddr2#,
				BIRTH_YMD=#birthYmd#,
				INTRO=#intro#,
				SEX_FLAG=#sexFlag#,
				user_info04 = #userInfo04#,
				user_info10 = #userInfo10#,
				user_info09 = #userInfo09#,
				user_info08 = #userInfo08#
			WHERE 1=1 
				AND USER_ID=#userId#
		]]>
	</update>
	
	<update id="user.updateModifyMenu"> /* user.updateModifyMenu */
		<![CDATA[
			UPDATE DOMAIN_PRINCIPAL
			SET MODIFY_MENU=#modifyMenu#
			WHERE PRINCIPAL_ID=#principal_id# AND DOMAIN_ID=#domainId#
		]]>
	</update>
	
	<update id="user.updateModifyMenuByRole"> /* user.updateModifyMenuByRole */
		<![CDATA[
			UPDATE DOMAIN_PRINCIPAL
			SET MODIFY_MENU=#modifyMenu#
			WHERE DOMAIN_ID=#domainId# AND PRINCIPAL_ID IN (
				SELECT USER_ID FROM SECURITY_USER_ROLE WHERE ROLE_ID=#roleId#
			)
		]]>
	</update>
	
	<update id="user.updateModifyMenuByGroup"> /* user.updateModifyMenuByGroup */
		<![CDATA[
			UPDATE DOMAIN_PRINCIPAL
			SET MODIFY_MENU=#modifyMenu#
			WHERE DOMAIN_ID=#domainId# AND PRINCIPAL_ID IN (
				SELECT USER_ID FROM SECURITY_USER_GROUP WHERE GROUP_ID=#groupId#
			)
		]]>
	</update>
	
	<update id="user.updateModifyMenuByGroupRole"> /* user.updateModifyMenuByGroupRole */
		<![CDATA[
			UPDATE DOMAIN_PRINCIPAL
			SET MODIFY_MENU=#modifyMenu#
			WHERE DOMAIN_ID=#domainId# AND PRINCIPAL_ID IN (
			    SELECT USER_ID FROM SECURITY_USER_GROUP WHERE GROUP_ID IN (
			    	SELECT GROUP_ID FROM SECURITY_GROUP_ROLE WHERE ROLE_ID=#roleId#
			    )
			)
		]]>
	</update>

	<select id="user.domainIds" resultClass="java.lang.String"> /* user.domainIds */
		SELECT A.DOMAIN_ID FROM DOMAIN_PRINCIPAL A 
		JOIN SECURITY_PRINCIPAL B ON A.PRINCIPAL_ID = B.PRINCIPAL_ID
		WHERE B.PRINCIPAL_TYPE='U' AND B.SHORT_PATH=#userId#
	</select>
	
	<select id="user.now" resultClass="java.lang.String"> /* user.now */
		SELECT TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') FROM DUAL
	</select>
	
	<select id="user.loginIps" resultClass="java.lang.String"> /* user.loginIps */
		SELECT ipaddress FROM (
			SELECT ROW_NUMBER() OVER ( ORDER BY time_stamp DESC) RNUM , ipaddress FROM user_statistics
			WHERE user_id=#userId#
			ORDER BY time_stamp DESC
		) a
		WHERE RNUM &lt;= 20
	</select>
	
	<update id="user.updateBlockAbroad"> /* user.updateBlockAbroad */
			UPDATE SECURITY_PRINCIPAL
			SET PRINCIPAL_INFO01 = #blockAbroad#
			WHERE full_path = '/user/' || #userId#
	</update>
	
	<select id="user.selectUserPasswd" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT 
			PRINCIPAL_ID, 
			COLUMN_VALUE,  
			AUTH_FAILURES
		FROM SECURITY_CREDENTIAL
		WHERE PRINCIPAL_ID = (SELECT PRINCIPAL_ID FROM SECURITY_PRINCIPAL WHERE PRINCIPAL_TYPE ='U' AND SHORT_PATH =#userId#)
	</select>
	
	
	<update id="user.updateUserPasswordforDrm">
		/* user.updateUserPasswordforDrm */
		UPDATE USERPASS
		SET    USER_INFO10  = #drmPassword#,
		       UPD_DATIM = SYSDATE
		WHERE  USER_ID   =#userId#
	</update>
	
	
	
	<resultMap class="com.saltware.enface.user.service.UserVO" id="UserVO.teamLeaderList">
		 <result property="userId" column="USER_ID" />
	</resultMap>
	
	<select id="user.selectMyTeamLeader" resultMap="UserVO.teamLeaderList"> /* user.selectMyTeamLeader */	
		SELECT USER_ID
		FROM   SJPB_CRI_MB A
		       JOIN USERPASS B
		       ON     A.CRI_MB_ID=B.USER_ID
		WHERE  B.ORG_CD          =#orgCd#
		AND    A.CRI_MB_STAT     ='1'
		AND    A.CRI_MB_POSI     ='02'	
	</select>
	
</sqlMap>

