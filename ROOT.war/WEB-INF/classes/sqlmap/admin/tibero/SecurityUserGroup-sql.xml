<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
	
<sqlMap namespace="admin">

	
	
	<!-- Query for [ SECURITY_USER_GROUP : 사용자그룹 ] Table -->
	<resultMap id="admin_SecurityUserGroupVO_PK" class="com.saltware.enview.admin.user.service.SecurityUserGroupPK">
	
		<result property="userId" column="USER_ID" columnIndex="1"/>	
		<result property="groupId" column="GROUP_ID" columnIndex="2"/>	
	</resultMap>
	
	<resultMap id="admin_SecurityUserGroupVO" class="com.saltware.enview.admin.user.service.SecurityUserGroupVO">
	 
		<result property="groupId" column="GROUP_ID" columnIndex="1"/>	 
		<result property="userId" column="USER_ID" columnIndex="2"/>	 
		<result property="principalName0" column="PRINCIPAL_NAME0" columnIndex="3"/>	 
		<result property="mileageTag" column="MILEAGE_TAG" columnIndex="4"/>	 
		<result property="sortOrder" column="SORT_ORDER" columnIndex="5"/>	
	</resultMap>
	
	<select id="securityUserGroup.totalCount" resultClass="int">
	/* securityUserGroup.totalCount */
		SELECT COUNT(*) totcnt
		FROM SECURITY_USER_GROUP
		WHERE 1=1	
			<isNotEqual prepend=" AND " property="userId" compareValue="0">USER_ID=CAST(#userId# AS INTEGER)</isNotEqual>
	</select>
	
	<select id="securityUserGroup.findByPage" resultMap="admin_SecurityUserGroupVO_PK">
	/* securityUserGroup.findByPage */
		SELECT tb1.* FROM (
			SELECT USER_ID,GROUP_ID,ROW_NUMBER() OVER(
			<isNotNull property="sortColumn">ORDER BY $sortColumn$ $sortMethod$</isNotNull>
			<isNull property="sortColumn">ORDER BY USER_ID ASC</isNull>
			) as rnum
			FROM SECURITY_USER_GROUP
			WHERE 1=1 
			<isNotEqual prepend=" AND " property="userId" compareValue="0">USER_ID=CAST(#userId# AS INTEGER)</isNotEqual>
		) tb1 WHERE tb1.rnum BETWEEN #startRow# AND #endRow#
	</select>

	<select id="securityUserGroup.findAll" resultMap="admin_SecurityUserGroupVO_PK">
			SELECT USER_ID,GROUP_ID
			FROM SECURITY_USER_GROUP
	</select>
	
	<select id="securityUserGroup.findByMaster" resultMap="admin_SecurityUserGroupVO_PK">
			SELECT USER_ID,GROUP_ID
			FROM SECURITY_USER_GROUP
			WHERE 1=1 
				<isNotEqual prepend=" AND " property="userId" compareValue="0">=CAST(#userId# AS INTEGER)</isNotEqual>
	</select>
	

	<select id="securityUserGroup.detail" resultMap="admin_SecurityUserGroupVO">
		<![CDATA[
			SELECT a.GROUP_ID, a.USER_ID, b.PRINCIPAL_NAME PRINCIPAL_NAME0, a.MILEAGE_TAG, a.SORT_ORDER
			FROM SECURITY_USER_GROUP a INNER JOIN SECURITY_PRINCIPAL b ON a.USER_ID=b.PRINCIPAL_ID
			WHERE 1=1 
				AND a.USER_ID=CAST(#userId# AS INTEGER)
				AND a.GROUP_ID=CAST(#groupId# AS INTEGER)
		]]>
	</select>
	
	<insert id="securityUserGroup.insert">
		<![CDATA[
			INSERT INTO SECURITY_USER_GROUP
				( GROUP_ID,USER_ID,MILEAGE_TAG,SORT_ORDER )
			VALUES ( CAST(#groupId# AS INTEGER),CAST(#userId# AS INTEGER),#mileageTag#,#sortOrder# )
		]]>
	</insert>
	
	<update id="securityUserGroup.update">
		<![CDATA[
			UPDATE SECURITY_USER_GROUP
			SET GROUP_ID=CAST(#groupId# AS INTEGER),USER_ID=CAST(#userId# AS INTEGER),MILEAGE_TAG=#mileageTag#,SORT_ORDER=#sortOrder#
			WHERE 1=1 
				AND USER_ID=CAST(#userId# AS INTEGER)
				AND GROUP_ID=CAST(#groupId# AS INTEGER)
		]]>
	</update>
	
	<delete id="securityUserGroup.delete">
		<![CDATA[
			DELETE FROM SECURITY_USER_GROUP
			WHERE 1=1 
				AND USER_ID=CAST(#userId# AS INTEGER)
				AND GROUP_ID=CAST(#groupId# AS INTEGER)
		]]>
	</delete>
	
	<delete id="securityUserGroup.deleteChildren">
		<![CDATA[
			DELETE FROM SECURITY_USER_GROUP
			WHERE 1=1 
				AND USER_ID=CAST(#userId# AS INTEGER)
		]]>
	</delete>
	

</sqlMap>

