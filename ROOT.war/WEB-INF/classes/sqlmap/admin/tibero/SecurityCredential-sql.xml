<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
	
<sqlMap namespace="admin">

	
	
	<!-- Query for [ SECURITY_CREDENTIAL : 사용자비밀번호 ] Table -->
	<resultMap id="admin_SecurityCredentialVO_PK" class="com.saltware.enview.admin.user.service.SecurityCredentialPK">
	
		<result property="credentialId" column="CREDENTIAL_ID" columnIndex="1"/>	
	</resultMap>
	
	<resultMap id="admin_SecurityCredentialVO" class="com.saltware.enview.admin.user.service.SecurityCredentialVO">
	 
		<result property="credentialId" column="CREDENTIAL_ID" columnIndex="1"/>	 
		<result property="principalId" column="PRINCIPAL_ID" columnIndex="2"/>	 
		<result property="columnValue" column="COLUMN_VALUE" columnIndex="3"/>	 
		<result property="updateRequired" column="UPDATE_REQUIRED" columnIndex="4"/>	 
		<result property="authFailures" column="AUTH_FAILURES" columnIndex="5"/>	 
		<result property="modifiedDate" column="MODIFIED_DATE" columnIndex="6"/>	
	</resultMap>
	
	<select id="securityCredential.totalCount" resultClass="int">
	/* securityCredential.totalCount */
		SELECT COUNT(*) totcnt
		FROM SECURITY_CREDENTIAL
		WHERE 1=1	
			<isNotEqual prepend=" AND " property="principalId" compareValue="0">PRINCIPAL_ID=CAST(#principalId# AS INTEGER)</isNotEqual>
	</select>
	
	<select id="securityCredential.findByPage" resultMap="admin_SecurityCredentialVO_PK">
	/* securityCredential.findByPage */
		SELECT tb1.* FROM (
			SELECT CREDENTIAL_ID, ROW_NUMBER() OVER(
			<isNotNull property="sortColumn">ORDER BY $sortColumn$ $sortMethod$</isNotNull>
			<isNull property="sortColumn">ORDER BY CREDENTIAL_ID ASC</isNull>
			) as rnum
			FROM SECURITY_CREDENTIAL
			WHERE 1=1 
				<isNotEqual prepend=" AND " property="principalId" compareValue="0">PRINCIPAL_ID=CAST(#principalId# AS INTEGER)</isNotEqual>
		) tb1 WHERE tb1.rnum BETWEEN #startRow# AND #endRow#
	</select>

	<select id="securityCredential.findAll" resultMap="admin_SecurityCredentialVO_PK">
			SELECT CREDENTIAL_ID
			FROM SECURITY_CREDENTIAL
	</select>
	
	<select id="securityCredential.findByMaster" resultMap="admin_SecurityCredentialVO_PK">
			SELECT CREDENTIAL_ID
			FROM SECURITY_CREDENTIAL
			WHERE 1=1 
				<isNotEqual prepend=" AND " property="principalId" compareValue="0">=CAST(#principalId# AS INTEGER)</isNotEqual>
	</select>
	

	<select id="securityCredential.detail" resultMap="admin_SecurityCredentialVO">
		<![CDATA[
			SELECT CREDENTIAL_ID,PRINCIPAL_ID,COLUMN_VALUE,UPDATE_REQUIRED,AUTH_FAILURES,MODIFIED_DATE
			FROM SECURITY_CREDENTIAL
			WHERE 1=1 
				AND CREDENTIAL_ID=#credentialId#
		]]>
	</select>
	
	<insert id="securityCredential.insert">
		<![CDATA[
			INSERT INTO SECURITY_CREDENTIAL
				( CREDENTIAL_ID,PRINCIPAL_ID,COLUMN_VALUE,UPDATE_REQUIRED,AUTH_FAILURES,MODIFIED_DATE )
			VALUES ( #credentialId#,CAST(#principalId# AS INTEGER),#columnValue#,CAST(#updateRequired# AS INTEGER),#authFailures#,#modifiedDate# )
		]]>
	</insert>
	
	<update id="securityCredential.update">
		<![CDATA[
			UPDATE SECURITY_CREDENTIAL
			SET CREDENTIAL_ID=#credentialId#,PRINCIPAL_ID=CAST(#principalId# AS INTEGER),COLUMN_VALUE=#columnValue#,UPDATE_REQUIRED=CAST(#updateRequired# AS INTEGER),AUTH_FAILURES=#authFailures#,MODIFIED_DATE=#modifiedDate#
			WHERE 1=1 
				AND CREDENTIAL_ID=#credentialId#
		]]>
	</update>
	
	<delete id="securityCredential.delete">
		<![CDATA[
			DELETE FROM SECURITY_CREDENTIAL
			WHERE 1=1 
				AND CREDENTIAL_ID=#credentialId#
		]]>
	</delete>
	
	<delete id="securityCredential.deleteChildren">
		<![CDATA[
			DELETE FROM SECURITY_CREDENTIAL
			WHERE 1=1 
				AND PRINCIPAL_ID=CAST(#principalId# AS INTEGER)
		]]>
	</delete>
	

</sqlMap>

