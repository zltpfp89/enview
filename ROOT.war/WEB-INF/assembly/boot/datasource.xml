<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

  <!--
    Simply use the JNDI data source provided via Spring
  -->
  <bean id="EnviewDS" class="org.springframework.jndi.JndiObjectFactoryBean">
    <meta key="j2:cat" value="jndiDS" />
    <property name="resourceRef" value="false" />
    <property name="jndiName" value="java:comp/env/jdbc/enview" />
  </bean>
  
  <!--bean id="EnviewDS" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy"/>
	<property name="url" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:ORCL"/>
	<property name="username" value="enview5"/>
	<property name="password" value="enview00"/>
  </bean-->

<!-- 
  <bean id="ojbConnectionManagement" class="com.saltware.enview.components.rdbms.ojb.ConnectionManagerManagementBean" />

  <bean id="ojbConfigurer" class="org.springframework.orm.ojb.support.LocalOjbConfigurer" depends-on="ojbConnectionManagement" />
 -->
 
  <!-- 
    Dynamically configures Database Platform for OJB by looking at the connection string
    and figuring out the OJB platform using an OJB metadata utility
    Its important to get this right otherwise you will be sending the wrong (most likely HSQL)
    flavor of SQL statements to the backend database.
  -->
  <!--
  <bean id="PlatformConfigurator" class="com.saltware.enview.components.rdbms.ojb.DatabasePlatformConfigurator"
    init-method="init">
    <constructor-arg index='0' ref="EnviewDS" />
    <constructor-arg index='1' value="EnviewDS" />
  </bean>
  -->

  <!-- 	
    Optional configuration for table schema aware datasource.
    
    The way to inject the schema switching is database specific. Here only the DB2 way
    is shown (set current schema = xx). Oracle statement might 
    be: "alter session set current_schema=xx", PostGres
    may look like this: "SET search_path TO xx"
    
    The idea was taken from http://forum.springframework.org/showthread.php?t=10728
    
    The runtime schema switching support was dropped because it is not needed here.
  -->

  <bean class="com.saltware.enview.components.datasource.SchemaAwareDataSourceProxy">
    <meta key="j2:cat" value="schemaAwareDS" />
    <meta key="j2:alias" value="EnviewDS" />
    <property name="targetDataSource" ref="dataSourceTarget" />
    <property name="schemaSql">
      <value>${com.saltware.enview.database.set.schema.sql}</value>
    </property>
  </bean>

  <bean class="org.springframework.jndi.JndiObjectFactoryBean">
    <meta key="j2:cat" value="schemaAwareDS" />
    <meta key="j2:alias" value="dataSourceTarget" />
    <property name="resourceRef" value="false" />
    <property name="jndiName" value="java:comp/env/jdbc/enview" />
  </bean>


  <!--       
    Creates a JNDI-based datasource bean name "EnviewDS". The information
    provided here is merged with the basic configuration for the 
    jdbc-connection-descriptor with the matching jcd-alias property
    ("EnviewDS") located under /etc/db-ojb/repository_database.xml in the
    source tree.
    
    Another requirement for this to work is to have the 
    ConnectionFactoryClass=org.apache.ojb.broker.accesslayer.ConnectionFactoryManagedImpl
    or to have
    ConnectionManagerClass=com.saltware.enview.components.rdbms.ojb.ConnectionManagerImpl.
    (either will do, both are recommended, see comments in configuration file).
    These properties are located in /etc/db-ojb/OJB.properties in the source tree.
    
    FYI: The two OJB configuration files mentioned above are currently already setup this way 
    in the default Enview implementation.  
    
    However, if you need to locate/modify these files in a running instance of enview,
    they will be located under /WEB-INF/classes.
  -->

  <!--
  <bean class="com.saltware.enview.components.rdbms.ojb.ConnectionRepositoryEntry">
    <meta key="j2:cat" value="ojbConnectionRepositoryDS" />
    <meta key="j2:alias" value="EnviewDS" />
    <property name="jndiName" value="java:comp/env/jdbc/enview" />
  </bean>
	-->

  <!-- If would like use a commons DBCP Pooled datasource as opposed to the default 
    JNDI one above you can uncomment the configuration below and fill in 
    the datasource information as it relates to your environment.
    
    A requirement for this to work is to have the 
    ConnectionFactoryClass=org.apache.ojb.broker.accesslayer.ConnectionFactoryDBCPImpl
    or to have
    ConnectionManagerClass=com.saltware.enview.components.rdbms.ojb.ConnectionManagerImpl
    This property is located in /etc/db-ojb/OJB.properties in the source tree.
  -->
  <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <meta key="j2:cat" value="jdbcDS" />
    <meta key="j2:alias" value="EnviewDS" />
    <property name="driverClassName" value="${com.saltware.enview.database.driver}" />
    <property name="url">
      <value>${com.saltware.enview.database.url}</value>
    </property>
    <property name="username">
      <value>${com.saltware.enview.database.user}</value>
    </property>
    <property name="password">
      <value>${com.saltware.enview.database.password}</value>
    </property>
  </bean>

</beans>
