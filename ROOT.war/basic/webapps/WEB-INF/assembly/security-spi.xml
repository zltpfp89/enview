<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

  <!-- ************** Security SPI Handlers ************** -->
  <!-- Security SPI: CommonQueries -->

  <bean id="com.saltware.enview.security.spi.impl.EnviewPrincipalLookupManagerFactory" class="com.saltware.enview.security.spi.impl.EnviewPrincipalLookupManagerFactory">
    <meta key="j2:cat" value="default or security" />
    <property name="mappings">
     <map>
       <entry key="default"><ref bean="com.saltware.enview.security.spi.impl.EnviewPrincipalLookupManagerDefault"/></entry>
       <entry key="mysql"><ref bean="com.saltware.enview.security.spi.impl.EnviewPrincipalLookupManagerMySql"/></entry>
     </map>
   </property>
  </bean>
  
  <bean id="com.saltware.enview.security.spi.impl.EnviewPrincipalLookupManagerDefault" class="com.saltware.enview.security.spi.impl.EnviewPrincipalLookupManagerDefault" />
  <bean id="com.saltware.enview.security.spi.impl.EnviewPrincipalLookupManagerMySql" class="com.saltware.enview.security.spi.impl.EnviewPrincipalLookupManagerMySql" />

  <bean id="com.saltware.enview.security.spi.impl.EnviewSecurityPersistenceManager"
    class="com.saltware.enview.security.spi.impl.EnviewSecurityPersistenceManager" init-method="init">
    <meta key="j2:cat" value="default or security" />
    <constructor-arg index="0">
      <value>ENVIEW-INF/ojb/security_repository.xml</value>
    </constructor-arg>
    <constructor-arg index="1">
      <ref bean="com.saltware.enview.security.spi.impl.EnviewPrincipalLookupManagerFactory"/>
    </constructor-arg>
  </bean>
  
  <bean id="com.saltware.enview.security.spi.EnviewSecurityPersistenceManager" parent="baseTransactionProxy">
    <meta key="j2:cat" value="default or security" />
    <property name="proxyInterfaces">
      <value>
        com.saltware.enview.security.spi.EnviewPermissionAccessManager,
        com.saltware.enview.security.spi.EnviewPermissionStorageManager,
        com.saltware.enview.security.spi.EnviewPrincipalAccessManager,
        com.saltware.enview.security.spi.EnviewPrincipalAssociationStorageManager,
        com.saltware.enview.security.spi.EnviewPrincipalStorageManager,
        com.saltware.enview.security.spi.UserPasswordCredentialAccessManager,
        com.saltware.enview.security.spi.UserPasswordCredentialStorageManager,        
        com.saltware.enview.security.spi.SecurityDomainStorageManager,        
        com.saltware.enview.security.spi.SecurityDomainAccessManager,
        com.saltware.enview.security.spi.EnviewDomainPrincipalAccessManager
      </value>
    </property>
    <property name="target">
      <ref bean="com.saltware.enview.security.spi.impl.EnviewSecurityPersistenceManager" />
    </property>
    <property name="transactionAttributes">
      <props>
        <prop key="add*">PROPAGATION_REQUIRED</prop>
        <prop key="update*">PROPAGATION_REQUIRED</prop>
        <prop key="grant*">PROPAGATION_REQUIRED</prop>
        <prop key="remove*">PROPAGATION_REQUIRED</prop>
        <prop key="revoke*">PROPAGATION_REQUIRED</prop>
        <prop key="store*">PROPAGATION_REQUIRED</prop>
        <prop key="getPasswordCredential*">PROPAGATION_REQUIRED</prop>
        <prop key="*">PROPAGATION_SUPPORTS</prop>
      </props>
    </property>
  </bean>

  <bean class="org.springframework.beans.factory.config.BeanReferenceFactoryBean">
    <meta key="j2:cat" value="dbSecurity" />
    <meta key="j2:alias" value="com.saltware.enview.security.spi.EnviewPrincipalStorageManager" />
    <property name="targetBeanName" value="com.saltware.enview.security.spi.EnviewSecurityPersistenceManager" />
  </bean>
  
  <bean class="org.springframework.beans.factory.config.BeanReferenceFactoryBean">
    <meta key="j2:cat" value="dbSecurity" />
    <meta key="j2:alias" value="com.saltware.enview.security.spi.EnviewPrincipalAssociationStorageManager" />
    <property name="targetBeanName" value="com.saltware.enview.security.spi.EnviewSecurityPersistenceManager" />
  </bean>
  
  <bean class="org.springframework.beans.factory.config.BeanReferenceFactoryBean">
    <meta key="j2:cat" value="dbSecurity" />
    <meta key="j2:alias" value="com.saltware.enview.security.spi.EnviewPermissionStorageManager" />
    <property name="targetBeanName" value="com.saltware.enview.security.spi.EnviewSecurityPersistenceManager" />
  </bean>
  
  <bean class="org.springframework.beans.factory.config.BeanReferenceFactoryBean">
    <meta key="j2:cat" value="dbSecurity" />
    <meta key="j2:alias" value="com.saltware.enview.security.spi.UserPasswordCredentialStorageManager" />
    <property name="targetBeanName" value="com.saltware.enview.security.spi.EnviewSecurityPersistenceManager" />
  </bean>

  <bean class="org.springframework.beans.factory.config.BeanReferenceFactoryBean">
    <meta key="j2:cat" value="dbSecurity or ldapSecurity" />
    <meta key="j2:alias" value="com.saltware.enview.security.spi.SecurityDomainStorageManager" />
    <property name="targetBeanName" value="com.saltware.enview.security.spi.EnviewSecurityPersistenceManager" />
  </bean>
  
  <bean class="org.springframework.beans.factory.config.BeanReferenceFactoryBean">
    <meta key="j2:cat" value="dbSecurity or ldapSecurity" />
    <meta key="j2:alias" value="com.saltware.enview.security.spi.SecurityDomainAccessManager" />
    <property name="targetBeanName" value="com.saltware.enview.security.spi.EnviewSecurityPersistenceManager" />
  </bean>
  
  <bean id="com.saltware.enview.security.spi.impl.UserPasswordCredentialManagerImpl"
    class="com.saltware.enview.security.spi.impl.UserPasswordCredentialManagerImpl">
    <meta key="j2:cat" value="dbSecurity" />
    <constructor-arg index="0" ref="com.saltware.enview.security.spi.EnviewSecurityPersistenceManager" />
    <constructor-arg index="1" ref="com.saltware.enview.security.spi.EnviewSecurityPersistenceManager" />
    <constructor-arg index="2" ref="com.saltware.enview.security.spi.UserPasswordCredentialPolicyManager" />
  </bean>

  <bean id="com.saltware.enview.security.spi.UserPasswordCredentialManager" parent="baseTransactionProxy">
    <meta key="j2:cat" value="dbSecurity" />
    <property name="proxyInterfaces">
      <value>com.saltware.enview.security.spi.UserPasswordCredentialManager</value>
    </property>
    <property name="target">
      <ref bean="com.saltware.enview.security.spi.impl.UserPasswordCredentialManagerImpl" />
    </property>
    <property name="transactionAttributes">
      <props>
        <prop key="*">PROPAGATION_REQUIRED</prop>
      </props>
    </property>
  </bean>
  
  <bean id="com.saltware.enview.security.spi.impl.UserPasswordCredentialPolicyManagerImpl"
    class="com.saltware.enview.security.spi.impl.UserPasswordCredentialPolicyManagerImpl">
    <meta key="j2:cat" value="default or security" />
    <constructor-arg index="0" ref="com.saltware.enview.security.CredentialPasswordEncoder" />
    <constructor-arg index="1" ref="com.saltware.enview.security.CredentialPasswordValidator" />
    <constructor-arg index="2">
      <list>
        <!-- enforce an invalid preset password value in the persisent store is required to be changed -->
        <bean class="com.saltware.enview.security.spi.impl.ValidatePasswordOnLoadInterceptor" />
        <!-- ensure preset cleartext passwords in the persistent store  will be encoded on first use -->
        <bean class="com.saltware.enview.security.spi.impl.EncodePasswordOnFirstLoadInterceptor" />
      </list>
    </constructor-arg>
  </bean>

  <bean id="com.saltware.enview.security.spi.UserPasswordCredentialPolicyManager" parent="baseTransactionProxy">
    <meta key="j2:cat" value="default or security" />
    <property name="proxyInterfaces">
      <value>com.saltware.enview.security.spi.UserPasswordCredentialPolicyManager</value>
    </property>
    <property name="target">
      <ref bean="com.saltware.enview.security.spi.impl.UserPasswordCredentialPolicyManagerImpl" />
    </property>
    <property name="transactionAttributes">
      <props>
        <prop key="authenticate*">PROPAGATION_REQUIRED</prop>
        <prop key="on*">PROPAGATION_REQUIRED</prop>
      </props>
    </property>
  </bean>
  
  <bean id="com.saltware.enview.security.CredentialPasswordEncoder"
    class="com.saltware.enview.security.spi.impl.MessageDigestCredentialPasswordEncoder">
    <meta key="j2:cat" value="default or security" />
    <constructor-arg index="0">
      <value>SHA-1</value>
    </constructor-arg>
  </bean>

  <bean id="com.saltware.enview.security.CredentialPasswordValidator"
    class="com.saltware.enview.security.spi.impl.DefaultCredentialPasswordValidator">
    <meta key="j2:cat" value="default or security" />
  </bean>

  <bean id="com.saltware.enview.security.spi.AuthorizationProvider"
    class="com.saltware.enview.security.impl.AuthorizationProviderImpl">
    <meta key="j2:cat" value="default or security or AuthorizationProvider" />
    <constructor-arg index="0">
      <ref bean="com.saltware.enview.security.impl.RdbmsPolicy" />
    </constructor-arg>
    <constructor-arg index="1">
      <value>true</value>
    </constructor-arg>
  </bean>

</beans>
